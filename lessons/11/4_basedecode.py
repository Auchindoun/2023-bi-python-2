#data:image/jpeg;base64,
from base64 import b64decode
from PIL import Image

byte_data = b''
print(b64decode(byte_data))
Image.frombytes('RGB', (183, 172), b64decode(byte_data), decoder_name='jpeg').show()

